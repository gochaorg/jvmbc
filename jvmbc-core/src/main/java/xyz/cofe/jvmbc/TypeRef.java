package xyz.cofe.jvmbc;

import org.objectweb.asm.TypeReference;

public enum TypeRef {
    CLASS_TYPE_PARAMETER(TypeReference.CLASS_TYPE_PARAMETER)
    ,METHOD_TYPE_PARAMETER(TypeReference.METHOD_TYPE_PARAMETER)
    ,CLASS_EXTENDS(TypeReference.CLASS_EXTENDS)
    ,CLASS_TYPE_PARAMETER_BOUND(TypeReference.CLASS_TYPE_PARAMETER_BOUND)
    ,METHOD_TYPE_PARAMETER_BOUND(TypeReference.METHOD_TYPE_PARAMETER_BOUND)
    ,FIELD(TypeReference.FIELD)
    ,METHOD_RETURN(TypeReference.METHOD_RETURN)
    ,METHOD_RECEIVER(TypeReference.METHOD_RECEIVER)
    ,METHOD_FORMAL_PARAMETER(TypeReference.METHOD_FORMAL_PARAMETER)
    ,THROWS(TypeReference.THROWS)
    ,LOCAL_VARIABLE(TypeReference.LOCAL_VARIABLE)
    ,RESOURCE_VARIABLE(TypeReference.RESOURCE_VARIABLE)
    ,EXCEPTION_PARAMETER(TypeReference.EXCEPTION_PARAMETER)
    ,INSTANCEOF(TypeReference.INSTANCEOF)
    ,NEW(TypeReference.NEW)
    ,CONSTRUCTOR_REFERENCE(TypeReference.CONSTRUCTOR_REFERENCE)
    ,METHOD_REFERENCE(TypeReference.METHOD_REFERENCE)
    ,CAST(TypeReference.CAST)
    ,CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT(TypeReference.CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT)
    ,METHOD_INVOCATION_TYPE_ARGUMENT(TypeReference.METHOD_INVOCATION_TYPE_ARGUMENT)
    ,CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT(TypeReference.CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT)
    ,METHOD_REFERENCE_TYPE_ARGUMENT(TypeReference.METHOD_REFERENCE_TYPE_ARGUMENT)
    ;TypeRef(int code){
        this.code = code;
    }
    public final int code;
}
